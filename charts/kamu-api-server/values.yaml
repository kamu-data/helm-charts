###############################################################################
# Application
###############################################################################

app:
  # TODO: generate schema for config from DTOs
  config: {}
  # TODO: Move into config file
  # URL of the storage bucket for datasets (S3 or Minio)
  # Example: https://api.kamu.dev/graphql
  datasetRepositoryUrl: ""
  # TODO: Move into secrets
  authGithubClientId: ""
  authGithubClientSecret: ""
  jwtSecret: ""

  awsCredentials:
    enabled: false
    existingSecret: ""
    awsEndpoint: ""
    awsAccessKeyId: ""
    awsSecretAccessKey: ""

###############################################################################
# Pod
###############################################################################

replicaCount: 1

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

image:
  repository: ghcr.io/kamu-data/kamu-api-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}

###############################################################################
# Service
###############################################################################

service:
  type: ClusterIP
  ports:
    - port: 80
      name: http
      targetPort: http
      protocol: TCP
    - port: 443
      name: https
      targetPort: http
      protocol: TCP
    - port: 50050
      name: flightsql
      targetPort: flightsql
      protocol: TCP
  annotations: {}

###############################################################################
# Ingress
###############################################################################

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

###############################################################################
# Autoscaling
###############################################################################

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
