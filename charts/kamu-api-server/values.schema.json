{
  "$schema": "http://json-schema.org/draft-07/schema",
  "type": "object",
  "properties": {
    "app": {
      "type": "object",
      "required": [
        "logLevel",
        "config"
      ],
      "properties": {
        "logLevel": {
          "type": "string"
        },
        "config": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "repo",
            "uploadRepo",
            "auth",
            "url"
          ],
          "properties": {
            "engine": {
              "type": "object",
              "required": [],
              "properties": {}
            },
            "identity": {
              "type": "object",
              "additionalProperties": false,
              "required": [],
              "properties": {
                "privateKey": {
                  "type": "string"
                }
              }
            },
            "protocol": {
              "type": "object",
              "required": [],
              "properties": {}
            },
            "source": {
              "type": "object",
              "required": [],
              "properties": {}
            },
            "runtime": {
              "type": "object",
              "additionalProperties": false,
              "required": [],
              "properties": {
                "workerThreads": {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                "maxBlockingThreads": {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                "threadStackSize": {
                  "$comment": "The default stack size for Tokyo worker threads is 2 MB",
                  "type": "integer",
                  "minimum": 2097152
                }
              }
            },
            "repo": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "repoUrl"
              ],
              "properties": {
                "repoUrl": {
                  "$comment": "URL of the storage bucket for datasets (S3 or Minio). Example: \"s3://repo.example.com.us-west-2/\"",
                  "type": "string",
                  "format": "uri"
                },
                "multiTenant": {
                  "$comment": "Indicates that target repo is multi-tenant (for file:// only)",
                  "type": "boolean"
                },
                "caching": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [],
                  "properties": {
                    "registryCacheEnabled": {
                      "type": "boolean"
                    },
                    "metadataLocalFsCachePath": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              }
            },
            "uploadRepo": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "maxFileSizeMb",
                "storage"
              ],
              "properties": {
                "maxFileSizeMb": {
                  "type": "integer",
                  "minimum": 1,
                  "$comment": "Maximum upload file size in megabytes"
                },
                "storage": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "kind"
                  ],
                  "properties": {
                    "kind": {
                      "type": "string",
                      "enum": [
                        "s3",
                        "local"
                      ]
                    },
                    "bucketS3Url": {
                      "$comment": "URL of the storage bucket for temporary uploads (S3 or Minio). Example: \"s3://upload.example.com.us-west-2/\"",
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            },
            "datasetEnvVars": {
              "type": "object",
              "additionalProperties": false,
              "required": [],
              "properties": {
                "encryptionKey": {
                  "type": "string",
                  "minLength": 32,
                  "maxLength": 32,
                  "$comment": "Encryption key for dataset env vars feature"
                },
                "enabled": {
                  "type": "boolean",
                  "$comment": "Argument to identify should DatasetEnvVars feature should be enabled or not"
                }
              }
            },
            "flowSystem": {
              "type": "object",
              "additionalProperties": false,
              "required": [],
              "properties": {
                "flowAgent": {
                  "type": "object",
                  "additionalProperties": true,
                  "required": [],
                  "properties": {
                    "awaitingStepSecs": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "mandatoryThrottlingPeriodSecs": {
                      "type": "integer",
                      "minimum": 1
                    }
                  }
                },
                "taskAgent": {
                  "type": "object",
                  "additionalProperties": true,
                  "required": [],
                  "properties": {
                    "taskCheckingIntervalSecs": {
                      "type": "integer",
                      "minimum": 1
                    }
                  }
                }
              }
            },
            "auth": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "jwtSecret",
                "providers"
              ],
              "properties": {
                "jwtSecret": {
                  "$comment": "Generate using `openssl rand -hex 32`",
                  "type": "string",
                  "minLength": 16
                },
                "providers": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "kind",
                          "clientId",
                          "clientSecret"
                        ],
                        "properties": {
                          "kind": {
                            "const": "github"
                          },
                          "clientId": {
                            "type": "string",
                            "minLength": 1
                          },
                          "clientSecret": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "kind",
                          "accounts"
                        ],
                        "properties": {
                          "kind": {
                            "const": "password"
                          },
                          "accounts": {
                            "type": "array",
                            "minItems": 1,
                            "uniqueItems": true,
                            "items": {
                              "type": "object",
                              "required": [
                                "accountName",
                                "password",
                                "email"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "accountName": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "password": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "email": {
                                  "type": "string",
                                  "format": "email"
                                },
                                "displayName": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "accountType": {
                                  "type": "string",
                                  "enum": [
                                    "user",
                                    "organization"
                                  ]
                                },
                                "provider": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "avatarUrl": {
                                  "type": "string",
                                  "format": "url"
                                },
                                "registeredAt": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "isAdmin": {
                                  "type": "boolean"
                                },
                                "treatDatasetsAsPublic": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "url": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "baseUrlPlatform",
                "baseUrlRest",
                "baseUrlFlightsql"
              ],
              "properties": {
                "baseUrlPlatform": {
                  "type": "string",
                  "format": "uri"
                },
                "baseUrlRest": {
                  "type": "string",
                  "format": "uri"
                },
                "baseUrlFlightsql": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "database": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "provider"
              ],
              "properties": {
                "provider": {
                  "type": "string",
                  "enum": [
                    "inMemory",
                    "sqlite",
                    "postgres"
                  ]
                },
                "databasePath": {
                  "type": "string",
                  "minLength": 1,
                  "description": "SQLite database path"
                },
                "credentialsPolicy": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "source"
                  ],
                  "properties": {
                    "source": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "kind"
                      ],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": [
                            "rawPassword",
                            "awsSecret",
                            "awsIamToken"
                          ]
                        },
                        "userName": {
                          "type": "string",
                          "minLength": 1,
                          "description": "Remote database user name: used in Raw Password and IAM token modes"
                        },
                        "rawPassword": {
                          "type": "string",
                          "minLength": 1,
                          "description": "Remote database raw password"
                        },
                        "secretName": {
                          "type": "string",
                          "minLength": 1,
                          "description": "AWS secret name to access user name and password from"
                        }
                      }
                    },
                    "rotationFrequencyInMinutes": {
                      "type": "integer",
                      "minimum": 1,
                      "description": "How often (in minutes) password rotates"
                    }
                  }
                },
                "databaseName": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Remote database name"
                },
                "host": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Remote database host name"
                },
                "port": {
                  "type": "integer",
                  "description": "Remote database port"
                }
              }
            },
            "email": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "senderAddress",
                "gateway"
              ],
              "properties": {
                "senderName": {
                  "type": "string"
                },
                "senderAddress": {
                  "type": "string",
                  "format": "email"
                },
                "gateway": {
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "kind"
                  ],
                  "properties": {
                    "kind": {
                      "type": "string",
                      "enum": [
                        "dummy",
                        "postmark"
                      ]
                    },
                    "apiKey": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "search": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "indexer": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "clearOnStart": {
                      "type": "boolean"
                    },
                    "skipDatasetsWithNoDescription": {
                      "type": "boolean"
                    },
                    "skipDatasetsWithNoData": {
                      "type": "boolean"
                    },
                    "payloadIncludeContent": {
                      "type": "boolean"
                    }
                  }
                },
                "overfetchFactor": {
                  "type": "number",
                  "format": "float"
                },
                "overfetchAmount": {
                  "type": "integer"
                },
                "semanticSearchThresholdScore": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          }
        }
      },
      "awsCredentials": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "existingSecret": {
            "type": "string"
          },
          "awsEndpoint": {
            "type": "string"
          },
          "awsRegion": {
            "type": "string"
          },
          "awsAccessKeyId": {
            "type": "string"
          },
          "awsSecretAccessKey": {
            "type": "string"
          }
        }
      }
    },
    "extraEnv": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "valueFrom": {
            "type": "object",
            "properties": {
              "configMapKeyRef": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object"
                  },
                  "optional": {
                    "type": "boolean"
                  }
                }
              },
              "fieldRef": {
                "type": "object",
                "properties": {
                  "apiVersion": {
                    "type": "string"
                  },
                  "fieldPath": {
                    "type": "string"
                  }
                }
              },
              "resourceFieldRef": {
                "type": "object",
                "properties": {
                  "resource": {
                    "type": "string"
                  },
                  "containerName": {
                    "type": "string"
                  },
                  "divisor": {
                    "type": "string"
                  }
                }
              },
              "secretKeyRef": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object"
                  },
                  "optional": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      }
    },
    "extraEnvFrom": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "configMapRef": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "optional": {
                "type": "boolean"
              }
            }
          },
          "prefix": {
            "type": "string"
          },
          "secretRef": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "optional": "boolean"
              }
            }
          }
        }
      }
    }
  }
}