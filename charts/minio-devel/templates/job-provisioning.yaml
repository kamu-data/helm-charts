{{- if .Values.provisioning.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-provisioning" (include "minio-devel.fullname" .) }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    spec:
      enableServiceLinks: false
      initContainers:
        - name: wait-until-ready
          image: {{ include "minio-devel.image" . | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/bash
            - -c
            - |
              set -euxo pipefail

              namespace="{{ .Release.Namespace }}"
              minio_service="{{ include "minio-devel.fullname" . }}"
              minio_port="{{ .Values.service.ports.api }}"
              minio_url="http://${minio_service}.${namespace}.svc.cluster.local:${minio_port}"

              until curl -sSf "${minio_url}/minio/health/ready"; do
                sleep 10
              done
          resources:
            {{- toYaml .Values.provisioning.resources | nindent 12 }}
      containers:
        - name: provision
          image: {{ include "minio-devel.image" . | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/bash
            - -c
            - |
              set -euo pipefail

              namespace="{{ .Release.Namespace }}"
              minio_service="{{ include "minio-devel.fullname" . }}"
              minio_port="{{ .Values.service.ports.api }}"
              minio_url="http://${minio_service}.${namespace}.svc.cluster.local:${minio_port}"

              mc alias set minio "$minio_url" "$MINIO_ROOT_USER" "$MINIO_ROOT_PASSWORD"

              {{- range $bucket := .Values.provisioning.buckets }}
              mc mb --ignore-existing minio/{{ $bucket.name }}
              {{- end }}

          env:
            - name: HOME
              value: /var/lib/minio
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "minio-devel.secretName" . }}
                  key: root_user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "minio-devel.secretName" . }}
                  key: root_password
          resources:
            {{- toYaml .Values.provisioning.resources | nindent 12 }}
          volumeMounts:
            - name: home
              mountPath: /var/lib/minio
      restartPolicy: Never
      {{- if .Values.securityContext.enabled }}
      securityContext: {{- omit .Values.securityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      volumes:
        - name: home
          emptyDir: {}
{{- end }}
